CREATE DATABASE IF NOT EXISTS Pruebas;
USE Pruebas;

-- Tabla principal de empleados 
CREATE TABLE IF NOT EXISTS empleados (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    correo VARCHAR(100) NOT NULL UNIQUE,
    contrasena VARCHAR(255) NOT NULL,
    puesto VARCHAR(100) NOT NULL,
    fecha_ingreso DATE NOT NULL,
    rol ENUM('admin', 'editor', 'usuario', 'invitado', 'empresa') NOT NULL,
    empresa VARCHAR(100)
);

-- Tabla de vacaciones
CREATE TABLE IF NOT EXISTS vacaciones (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_empleado INT NOT NULL,
    dias_totales INT NOT NULL DEFAULT 0,
    dias_asignados INT NOT NULL DEFAULT 0,
    dias_disfrutados INT NOT NULL DEFAULT 0,
    FOREIGN KEY (id_empleado) REFERENCES empleados(id) ON DELETE CASCADE
);



-- Tabla de solicitudes 
CREATE TABLE IF NOT EXISTS solicitudes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_empleado INT NOT NULL,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL,
    dias_solicitados INT NOT NULL,
    estado ENUM('pendiente', 'aprobada', 'rechazada') DEFAULT 'pendiente',
    fecha_aprobacion DATETIME NULL,
    FOREIGN KEY (id_empleado) REFERENCES empleados(id) ON DELETE CASCADE
);

-- Tabla de tareas asignadas
CREATE TABLE tareas_asignadas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_empleado INT NOT NULL,
    modulo VARCHAR(100) NOT NULL,
    submodulo VARCHAR(100) NOT NULL,
    tarea VARCHAR(100) NOT NULL,
    asignado_por INT NOT NULL,
    fecha_asignacion DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_empleado) REFERENCES empleados(id),
    FOREIGN KEY (asignado_por) REFERENCES empleados(id)
);